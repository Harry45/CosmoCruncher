{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"about/","title":"About","text":"<ul> <li>Emulator for Linear Matter Power Spectrum</li> <li>Apply Halofit function on top</li> <li>Get the shear and convergence power spectra</li> <li>But we need \\(\\mathtt{CAMB}\\) to compute distance</li> <li>Allow user to upload \\(n(z)\\) file in a particular format</li> <li>Emulator for the CMB power spectra</li> <li>Ecosystem - JAX, PyTorch and TensorFlow</li> <li>Cosmological Application: Planck 2018</li> <li>Cosmological Application: Weak Lensing (KiDS for example)</li> <li>Interactive Application to display power spectra</li> <li>Allow user to build their custom emulator.</li> </ul> <p>Focus on speed rather than differentiability and other things.</p> <p>Does Latex work?</p> \\[ a = b + c \\] <p>Does python code work?</p> <pre><code>import numpy as np\n\nx = np.linspace(0, 1, 100)\n</code></pre>"},{"location":"application/","title":"CosmoCruncher Application","text":"<p>Can access the application here.</p> <p> </p>"},{"location":"cmb/","title":"CMB Power Spectra","text":""},{"location":"contact/","title":"Contact","text":"Contact Card <p>Name: John</p> <p>Institution: Example University</p> <p>Email: john.doe@example.com</p> <p>Name: John</p> <p>Institution: Example University</p> <p>Email: john.doe@example.com</p> <p>Name: John</p> <p>Institution: Example University</p> <p>Email: john.doe@example.com</p>"},{"location":"contact/#acknowledgement","title":"Acknowledgement","text":"<p> We thank Dr. Zafiirah Hosenie for useful discussion on how to set up this space and how to design a workspace tailored towards Continuous Integration/Continuous Delivery. Moreover, this work would not have been possible without the support of an LSSTC Catalyst Fellowship to Arrykrishna Mootoovaloo, funded through Grant 62192 from the John Templeton Foundation to LSST Corporation. The opinions expressed in this work are those of the authors and do not necessarily reflect the views of LSSTC or the John Templeton Foundation. </p>"},{"location":"custom/","title":"Custom Emulator","text":"<p> We may also wish to emulate a completely new quantity, \\(f(\\theta)\\). In this spirit, we propose how to do this with our library here. Throughout, we will assume that we have a tabular output (target), \\(y\\in \\mathbb{R}^{N_{\\theta}\\times N}\\) and a tabular input (cosmological parameters), \\(\\theta \\in \\mathbb{R}^{N_{\\theta}\\times p}\\), where \\(N_{\\theta}\\) is the number of training points, \\(N\\) is the number of nodes, for example, \\(\\ell\\) or \\(k\\) and \\(p\\) is the dimensionality of the problem (number of cosmological parameters). </p>"},{"location":"custom/#training","title":"Training","text":""},{"location":"custom/#prediction","title":"Prediction","text":""},{"location":"ecosystem/","title":"Ecosystem","text":""},{"location":"ecosystem/#jax","title":"JAX","text":""},{"location":"ecosystem/#pytorch","title":"PyTorch","text":""},{"location":"ecosystem/#tensorflow","title":"TensorFlow","text":""},{"location":"pk/","title":"Matter Power Spectrum","text":""},{"location":"wl/","title":"Weak Lensing Power Spectra","text":""}]}